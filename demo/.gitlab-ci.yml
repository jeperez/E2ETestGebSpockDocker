# This file is a template, and might need editing before it works on your project.
# This template uses the java:8 docker image because there isn't any
# official Gradle image at this moment
#
# This is the Gradle build system for JVM applications
# https://gradle.org/
# https://github.com/gradle/gradle

# Make the gradle wrapper executable. This essentially downloads a copy of
# Gradle to build the project with.
# https://docs.gradle.org/current/userguide/gradle_wrapper.html
# It is expected that any modern gradle project has a wrapper
before_script:
    - chmod +x gradlew

# We redirect the gradle user home using -g so that it caches the
# wrapper and dependencies.
# https://docs.gradle.org/current/userguide/gradle_command_line.html
#
# Unfortunately it also caches the build output so
# cleaning removes reminants of any cached builds.
# The assemble task actually builds the project.
# If it fails here, the tests can't run.
build:
  image: java:8
  stage: build
  script:
    - ./gradlew clean build -x test shadowJar
  allow_failure: false
  artifacts:
      paths:
      - build/libs/

# Use the generated build output to run the tests.
test:
  image: openjdk:8-jdk-alpine
  stage: test
  before_script:
    - docker info
    - docker-compose --version
  script:
    - ./gradlew e2eTestsDocker -PapplicationAddress=http://app.e2edockergeb_default/ -PseleniumAddress=http://localhost:24444/wd/hub
  artifacts:
      when: always
      paths:
      - build/test-results/
      - build/reports/
      - build/geb-reports/
